description: " \
compare num events and the bandwidth (num events per video duration) \
with respect to the parameters of different subsampling methods \
"
seed: 0
optimize:
  optimizer: Adam
  lr: 1e-4
  lr_scheduler: ReduceLROnPlateau
  mode: min 
  factor: 0.5
  patience: 40
  weight_decay: 0
model:
  name: EST
  k: null #20
  aggr: null #max
  num_bins: 9
  cnn_type: resnet34
  resnet_crop_dimension: [224, 224]  # dimension of crop before it goes into classifier
  est_mlp_layers: [1, 30, 30, 1] # kernel layers for EST
  est_activation: nn.LeakyReLU(negative_slope=0.1)
  resnet_pretrained: True
train:
  epochs: 250
  batch_size: 16
  loss_fn: nn.CrossEntropyLoss()
  profiler: null #simple
  ckpt_path: null
  multi_val_num: 1
  multi_test_num: 3
  default_root_dir: null
auto_resume:
  sbatch_folder: null
  num_repeat: null
dataset:
  name: NCALTECH101
  train_percentage: 0.75 # not applicable
  validation_percentage: 0.10 # not applicable
  image_resolution: [180,240]  # dimension of spatial grid  (H x W)
  num_samples_per_class: null
  num_classes: null
  dataset_path: null
  num_workers: 7
  in_memory: True
transform:
  train:
    transform: null
    spatial_centering: null #True
    temporal_scale: null #1e-5
    temporal_quantization: null #9
    spatial_subsampling:  
      transform: null
      h_r: null
      v_r: null
      h_r_offset: null # offset for subsampling most be between 0 <= h_r_offset < h_r
      v_r_offset: null # offset for subsampling most be between 0 <= v_r_offset < v_r     
      dataset_wide_random_offsets: null #Default:False. If True, the above offsets are selected randomly for the whole dataset.
    spatial_subsampling_random:  
      transform: null #True
      h_r: null # h_r is the subsampling rates in horizontal directions, e.g., 2
      v_r: null # v_r is the subsampling rates in vertical directions, e.g., 2
    temporal_subsampling:
      transform: null #True
      subsampling_ratio: null #t_r where t_r is the subsampling rate in temporal direction, e.g., 2 
      window_size: null # The window size that are devided into t_r parts and the first part is selected, the uint is in milliseconds
      fixed_interval: False #Default:False. If True, the `sampling_period` == `window_size`, otherwise, the `sampling_period` == `window_size`/`subsampling_ratio`
      time_offset_coefficient: null #Default:0. A float number that should be between 0 and 1. The offset is calculated as `time_offset_coefficient * (subsampling_period - interval_length)`
      dataset_wide_random_time_offset: null #Default:False. If True, the above time offset is selected randomly for the whole dataset.
    temporal_subsampling_random:
      transform: null #True
      subsampling_ratio: null #t_r where t_r is the subsampling rate in temporal direction, e.g., 2 
      window_size: null # The window size that are devided into t_r parts and the first part is selected, the uint is in milliseconds
      fixed_interval: null #Default:False. If True, the `sampling_period` == `window_size`, otherwise, the `sampling_period` == `window_size`/`subsampling_ratio`
    random_ratio_subsampling: null #p where p is the probability of random subsampling. e.g., 0.5
    num_events_per_sample: null #32
    spatiotemporal_filtering_subsampling: #Subsampling the events randomly with probability proportional to spatiotemporal filtering values
      transform: null #True
      tau: null #30 in milliseconds. Temporal constant for spatiotemporal filtering
      filter_size: null #7 in pixels. Filter size for spatial Gaussian filter.
      sampling_threshold: null #0.1 The smaller te threshold, the smaller number of events
      normalization_length: null #null #The length of the filter_values normalization, e.g., 100 (If None, the normalization is not applied)
      mean_normalized: null #False If True, the filter values are normalized by dividiing them by their mean
    tos_2DHarris_subsampling: #Subsampling the events randomly with probability proportional to the 2D luv-Harris corner detection values
      transform: null #True
      filter_size: null #7 in pixels. Filter size for spatial Gaussian filter.
      TOS_T: null # 14 in pixels. Two times the size of the filter_size
      Harris_block_size: null # 2 in pixels. Block size for Harris corner detection
      Harris_ksize: null # 3 in pixels. Aperture parameter of the Sobel derivative used.
      Harris_k: null # 0.04. Harris corner detection free parameter
      sampling_threshold: null #0.1 The smaller te threshold, the smaller number of events
      mean_normalized: null #False If True, the filter values are normalized by dividiing them by their mean
    baseline_event_count:
      transform: null #True
      h_r: null # h_r is the subsampling rates in horizontal directions, e.g., 2
      v_r: null # v_r is the subsampling rates in vertical directions, e.g., 2
      threshold: null # Default: 1.0
    fixed_sampling:
      transform: True
      seed_str: ${seed}
    random_num_events_per_sample:
      transform: null #True
      min_num_events: null #8
      max_num_events: null #2048
      inverse_sampling: null #False
    random_flip: null #0.5
    scale_limits: null #[0.75,1.5]
    degree_limit: null #10  #20
    thresh_quantile: null #0.3
    filter_nodes: null #remove_NASL_failed_pixels
    conv_vec_path: null #'datasets/NCALTECH101/conv_scores'
    radius_graph:
      transform: null #True
      r: null #3
      max_num_neighbors: null #32
      add_edge_attr:
        transform: null #True
        cat: null #True
    shift_and_flip:
      transform: null #True
      resolution: ${dataset.image_resolution}
      max_shift: null #20
      p: null #0.5
  validation:
    transform: ${transform.train.transform}
    spatial_centering: ${transform.train.spatial_centering}
    temporal_scale: ${transform.train.temporal_scale}
    temporal_quantization: ${transform.train.temporal_quantization}
    spatial_subsampling:
      transform: ${transform.train.spatial_subsampling.transform}
      h_r: ${transform.train.spatial_subsampling.h_r}
      v_r: ${transform.train.spatial_subsampling.v_r}
      h_r_offset: ${transform.train.spatial_subsampling.h_r_offset}
      v_r_offset: ${transform.train.spatial_subsampling.v_r_offset}
      dataset_wide_random_offsets: ${transform.train.spatial_subsampling.dataset_wide_random_offsets}
    spatial_subsampling_random:
      transform: ${transform.train.spatial_subsampling_random.transform}
      h_r: ${transform.train.spatial_subsampling_random.h_r}
      v_r: ${transform.train.spatial_subsampling_random.v_r}
    temporal_subsampling:
      transform: ${transform.train.temporal_subsampling.transform}
      subsampling_ratio: ${transform.train.temporal_subsampling.subsampling_ratio}
      window_size: ${transform.train.temporal_subsampling.window_size}
      fixed_interval: ${transform.train.temporal_subsampling.fixed_interval}
      time_offset_coefficient: ${transform.train.temporal_subsampling.time_offset_coefficient}
      dataset_wide_random_time_offset: ${transform.train.temporal_subsampling.dataset_wide_random_time_offset}
    temporal_subsampling_random:
      transform: ${transform.train.temporal_subsampling_random.transform}
      subsampling_ratio: ${transform.train.temporal_subsampling_random.subsampling_ratio}
      window_size: ${transform.train.temporal_subsampling_random.window_size}
      fixed_interval: ${transform.train.temporal_subsampling_random.fixed_interval}
    random_ratio_subsampling: ${transform.train.random_ratio_subsampling}   
    num_events_per_sample: ${transform.train.num_events_per_sample}
    spatiotemporal_filtering_subsampling:
      transform: ${transform.train.spatiotemporal_filtering_subsampling.transform}
      tau: ${transform.train.spatiotemporal_filtering_subsampling.tau}
      filter_size: ${transform.train.spatiotemporal_filtering_subsampling.filter_size}
      sampling_threshold: ${transform.train.spatiotemporal_filtering_subsampling.sampling_threshold}
      normalization_length: ${transform.train.spatiotemporal_filtering_subsampling.normalization_length}
      mean_normalized: ${transform.train.spatiotemporal_filtering_subsampling.mean_normalized}
    tos_2DHarris_subsampling: #Subsampling the events randomly with probability proportional to the 2D luv-Harris corner detection values
      transform: ${transform.train.tos_2DHarris_subsampling.transform}
      filter_size: ${transform.train.tos_2DHarris_subsampling.filter_size}
      TOS_T: ${transform.train.tos_2DHarris_subsampling.TOS_T}
      Harris_block_size: ${transform.train.tos_2DHarris_subsampling.Harris_block_size}
      Harris_ksize: ${transform.train.tos_2DHarris_subsampling.Harris_ksize}
      Harris_k: ${transform.train.tos_2DHarris_subsampling.Harris_k}
      sampling_threshold: ${transform.train.tos_2DHarris_subsampling.sampling_threshold}
      mean_normalized: ${transform.train.tos_2DHarris_subsampling.mean_normalized}
    baseline_event_count:
      transform: ${transform.train.baseline_event_count.transform}
      h_r: ${transform.train.baseline_event_count.h_r}
      v_r: ${transform.train.baseline_event_count.v_r}
      threshold: ${transform.train.baseline_event_count.threshold}
    fixed_sampling:
      transform: ${transform.train.fixed_sampling.transform}
      seed_str: ${transform.train.fixed_sampling.seed_str}
    random_num_events_per_sample:
      transform: ${transform.train.random_num_events_per_sample.transform}
      min_num_events: ${transform.train.random_num_events_per_sample.min_num_events}
      max_num_events: ${transform.train.random_num_events_per_sample.max_num_events}
      inverse_sampling: ${transform.train.random_num_events_per_sample.inverse_sampling}
    random_flip: null
    scale_limits: null
    degree_limit: null
    thresh_quantile: ${transform.train.thresh_quantile}
    filter_nodes: ${transform.train.filter_nodes}
    conv_vec_path: ${transform.train.conv_vec_path}
    radius_graph:
      transform: null #True
      r: null #3
      max_num_neighbors: null #32
      add_edge_attr:
        transform: null #True
        cat: null #True  
    shift_and_flip:
      transform: null #True
      resolution: ${dataset.image_resolution}
      max_shift: null #20
      p: null #0.5
  test:
    transform: ${transform.train.transform}
    spatial_centering: ${transform.train.spatial_centering}
    temporal_scale: ${transform.train.temporal_scale}
    temporal_quantization: ${transform.train.temporal_quantization}
    spatial_subsampling:
      transform: ${transform.train.spatial_subsampling.transform}
      h_r: ${transform.train.spatial_subsampling.h_r}
      v_r: ${transform.train.spatial_subsampling.v_r}
      h_r_offset: ${transform.train.spatial_subsampling.h_r_offset}
      v_r_offset: ${transform.train.spatial_subsampling.v_r_offset}
      dataset_wide_random_offsets: ${transform.train.spatial_subsampling.dataset_wide_random_offsets}
    spatial_subsampling_random:
      transform: ${transform.train.spatial_subsampling_random.transform}
      h_r: ${transform.train.spatial_subsampling_random.h_r}
      v_r: ${transform.train.spatial_subsampling_random.v_r}
    temporal_subsampling:
      transform: ${transform.train.temporal_subsampling.transform}
      subsampling_ratio: ${transform.train.temporal_subsampling.subsampling_ratio}
      window_size: ${transform.train.temporal_subsampling.window_size}
      fixed_interval: ${transform.train.temporal_subsampling.fixed_interval}
      time_offset_coefficient: ${transform.train.temporal_subsampling.time_offset_coefficient}
      dataset_wide_random_time_offset: ${transform.train.temporal_subsampling.dataset_wide_random_time_offset}
    temporal_subsampling_random:
      transform: ${transform.train.temporal_subsampling_random.transform}
      subsampling_ratio: ${transform.train.temporal_subsampling_random.subsampling_ratio}
      window_size: ${transform.train.temporal_subsampling_random.window_size}
      fixed_interval: ${transform.train.temporal_subsampling_random.fixed_interval}
    random_ratio_subsampling: ${transform.train.random_ratio_subsampling}   
    num_events_per_sample: ${transform.train.num_events_per_sample}
    spatiotemporal_filtering_subsampling:
      transform: ${transform.train.spatiotemporal_filtering_subsampling.transform}
      tau: ${transform.train.spatiotemporal_filtering_subsampling.tau}
      filter_size: ${transform.train.spatiotemporal_filtering_subsampling.filter_size}
      sampling_threshold: ${transform.train.spatiotemporal_filtering_subsampling.sampling_threshold}
      normalization_length: ${transform.train.spatiotemporal_filtering_subsampling.normalization_length}
      mean_normalized: ${transform.train.spatiotemporal_filtering_subsampling.mean_normalized}
    tos_2DHarris_subsampling: #Subsampling the events randomly with probability proportional to the 2D luv-Harris corner detection values
      transform: ${transform.train.tos_2DHarris_subsampling.transform}
      filter_size: ${transform.train.tos_2DHarris_subsampling.filter_size}
      TOS_T: ${transform.train.tos_2DHarris_subsampling.TOS_T}
      Harris_block_size: ${transform.train.tos_2DHarris_subsampling.Harris_block_size}
      Harris_ksize: ${transform.train.tos_2DHarris_subsampling.Harris_ksize}
      Harris_k: ${transform.train.tos_2DHarris_subsampling.Harris_k}
      sampling_threshold: ${transform.train.tos_2DHarris_subsampling.sampling_threshold}
      mean_normalized: ${transform.train.tos_2DHarris_subsampling.mean_normalized}
    baseline_event_count:
      transform: ${transform.train.baseline_event_count.transform}
      h_r: ${transform.train.baseline_event_count.h_r}
      v_r: ${transform.train.baseline_event_count.v_r}
      threshold: ${transform.train.baseline_event_count.threshold}
    fixed_sampling:
      transform: ${transform.train.fixed_sampling.transform}
      seed_str: ${transform.train.fixed_sampling.seed_str}
    random_num_events_per_sample:
      transform: ${transform.train.random_num_events_per_sample.transform}
      min_num_events: ${transform.train.random_num_events_per_sample.min_num_events}
      max_num_events: ${transform.train.random_num_events_per_sample.max_num_events}
      inverse_sampling: ${transform.train.random_num_events_per_sample.inverse_sampling}
    random_flip: null
    scale_limits: null
    degree_limit: null
    thresh_quantile: ${transform.train.thresh_quantile}
    filter_nodes: ${transform.train.filter_nodes}
    conv_vec_path: ${transform.train.conv_vec_path} 
    radius_graph:
      transform: null #True
      r: null #3
      max_num_neighbors: null #32
      add_edge_attr:
        transform: null #True
        cat: null #True
    shift_and_flip:
      transform: null #True
      resolution: null #[180,240]
      max_shift: null #20
      p: null #0.5
pre_transform:
  train:
    transform: null #True
    num_events_per_sample: null #32
    thresh_quantile: null #0.3
    filter_nodes: null #remove_NASL_failed_pixels
    conv_vec_path: null #'datasets/NCALTECH101/conv_scores'
    baseline_event_count:
      transform: null #True
      h_r: null # h_r is the subsampling rates in horizontal directions, e.g., 2
      v_r: null # v_r is the subsampling rates in vertical directions, e.g., 2
      threshold: null # Default: 1.0
  validation:
    transform: ${pre_transform.train.transform}
    num_events_per_sample: ${pre_transform.train.num_events_per_sample}
    thresh_quantile: ${pre_transform.train.thresh_quantile}
    filter_nodes: ${pre_transform.train.filter_nodes}
    conv_vec_path: ${pre_transform.train.conv_vec_path}
    baseline_event_count:
      transform: ${pre_transform.train.baseline_event_count.transform}
      h_r: ${pre_transform.train.baseline_event_count.h_r}
      v_r: ${pre_transform.train.baseline_event_count.v_r}
      threshold: ${pre_transform.train.baseline_event_count.threshold}
  test:
    transform: ${pre_transform.train.transform}
    num_events_per_sample: ${pre_transform.train.num_events_per_sample}
    thresh_quantile: ${pre_transform.train.thresh_quantile}
    filter_nodes:  ${pre_transform.train.filter_nodes}
    conv_vec_path: ${pre_transform.train.conv_vec_path}
    baseline_event_count:
      transform: ${pre_transform.train.baseline_event_count.transform}
      h_r: ${pre_transform.train.baseline_event_count.h_r}
      v_r: ${pre_transform.train.baseline_event_count.v_r}
      threshold: ${pre_transform.train.baseline_event_count.threshold}
wandb:
  log: False
  offline: False
  dir: "log_folder"
  id: null
  experiment_name: ""
  entity: ""
  project: ""